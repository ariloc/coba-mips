- Espacio adicional innecesario al comienzo de la página 3.
- Página 3, hay un espacio adicional después de "Carga en el simulador el código provisto" (quedando el punto final en la próxima línea). Además, podría ser mejor resaltado para demarcar que los ejercicios siguientes se relacionan a cargar el código en cuestión al simulador.
- Página 4: "La directiva .byte valor inicializa una posición de memoria, de tamaño byte..." No debería ser algo como "del tamaño de un byte"?
- Página 4: Falta de explicación de little y big endian (aunque puede ser a propósito para investigar)
- Página 8: Se indica que la etiqueta main hace referencia por defecto a la dirección 0x00400020. Sin embargo, en el ejemplo dado apunta a la 0x00400000, lo cual puede prestar a confusión o dificultad para entender por qué esta dirección sería diferente a la de comienzo de .text.
- Página 8: Se habla del concepto de "parte alta" y "parte baja" de un registro, y la explicación de la misma es un poco confusa. Podría incluirse una figura que muestre las dos partes. Además, el concepto de "peso" o "bits significativos" no ha sido introducido de forma apropiada en el enunciado.
- Página 8, Cuestión 2.1: "Localiza la instrucción en memoria de instrucciones..." suena raro, buscar un sinónimo para "instrucción".
- Página 9: "La instrucción máquina, analizando cada campo de ésta e indicado qué tipo de formato tiene" es confuso, ya que no se entiende si se refiere al valor en memoria o la representación en texto de la misma (o ambas).
- Página 10, Cuestión 2.10: Dado que la Cuestión 2.11 pregunta por "modificar el programa anterior", y esta consigna pregunta por "modificar el código", resulta ambiguo si partir desde el programa original o no, considerando que la Cuestión 2.9 si lo aclara. Ante esto, personalmente interpreto que los ejercicios piden primero modificar el programa original, y luego ir cambiándolo sucesivamente tras lo hecho en la Cuestión previa. Una forma de esclarecer esta ambigüedad sin cambiar los enunciados, podría ser simplemente colocando los 3 cómo items a, b y c de una sola cuestión. Sino también, se podría mencionar eexplícitamente a la Cuestión a la que hacen referencia modificar, de ser el caso, incluso a pesar de encontrarse una seguida de la otra.
- Página 13, Ejercicio 8: El ejercicio es confuso. Puede referirse a recrear el programa anterior utilizando la dirección 0x10010000 como punto de partida, o hacer un programa completamente diferente que extienda desde el ejercicio anterior copiando el vector a otra posición (y casualmente utilizar los registros con sus valores cargados). Se entiendo por diferencia de dificultad de optar por la segunda opción, pero podría aclararse algo como "Extender el programa del punto anterior que copie..."
- Página 14: Espacio adicional al comienzo de la página innecesario.
- Página 14: ERROR! Las instrucciones NO acabadas en 'u' son las que provocan una excepción de desbordamiento, mientras que las SI acabadas en 'u' lo ignoran.
- Página 15: ERROR! En el primer código de la página, le falta un símbolo '$' a la variable $t1, en la instrucción 'lw $t1, numero3($0)'.
- Página 15, Cuestión 3.5: Posible Error! Se pregunta qué resultado se almacena en numero3, cuando el resultado de las operaciones de almacena en numero1, mediante la instrucción sw.
- Página 16, Descripción de "Operaciones lógicas": "El código anterior pone los 16 bits más significativos y el bit 0 de numero a 0, ..." no está muy bien redactado e incluso es INCORRECTO, ya que al hacer la operación AND con la media palabra 0xfffe, se estarían copiando los 16 bits menos significativos, pero ignorando el bit de menor peso que queda en 0, NO los 'más' significativos como dice el enunciado. De esta forma, podría corregirse este error reescribiendo la frase algo así como: 'El código anterior obtiene los 16 bits menos significativos de numero _ignorando_ el bit de menor peso (bit 0), cuyo valor queda en 0, almacenándose el resultado en la palabra (numero+4)'. Por supuesto se puede redactar de otras formas, considerando que el bit menos significativo en vez de ignorarse, es como "si se estableciera en 0", que es la forma en la cual la frase original lo sugiere.
En concordancia con este error, el comentario también es incorrecto o no es útil para el escenario particular, ya que describe la representación binaria de 0xffe, cuando el valor utilizado es 0xfffe.
Cabe mencionar que luego la aclaración en oraciones siguientes describen la operación correctamente.
- Página 18, Ejercicio 13: Typo! No hay coma que separe el -12 y el 15.
- Página 18, Ejercicio 14: Se asume que el bit menos significativo es el bit 0 por la forma en la que se ha utilizado en el texto previamente, aunque no está completamente claro.
- Página 18, Ejercicio 15: "Cambiar" los bits no queda del todo claro. Se asume que se refiere a "invertir el estado" de los bits, requiriendo el uso de la operación xor.
